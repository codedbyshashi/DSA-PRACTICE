// BRUTE FORCE
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {

        int left=0,right=0,index=0;

        int[] merged = new int[m+n];

        while(left<m && right<n){
            if(nums1[left]<=nums2[right]){
                merged[index++] = nums1[left++];
            }
            else{
                merged[index++] = nums2[right++];
            }
        }
        while(left<m){
            merged[index++] = nums1[left++];
        }
        while(right<n){
            merged[index++] = nums2[right++];
        }
        for(int i=0;i<m+n;i++){
            nums1[i] = merged[i];
        }
        
    }
//OPTIMAL APPROACH
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int left = m-1,right=0;

       while (left >= 0 && right < n) {
            if (nums1[left] > nums2[right]) {
                int temp = nums1[left];
                nums1[left] = nums2[right];
                nums2[right] = temp;
                left--;
                right++;
            } 
            //break otherwise
            else break;
        }
        Arrays.sort(nums1,0,m);
        Arrays.sort(nums2);
        for(int i=m;i<n+m;i++){
            nums1[i] = nums2[i-m];
        }
        
    }
}
}
